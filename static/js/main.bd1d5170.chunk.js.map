{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","alert","update","updatedAt","Date","now","toggleEditing","maxLength","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","creatorId","collection","add","for","faPlus","accept","files","length","theFile","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","backgroundImage","document","querySelector","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Nagivation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","AppRouter","isLoggedIn","Navigation","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","arge","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd1d5170.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\"\n\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n\n","import React, {useState} from \"react\";\nimport {authService} from \"../fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {name, value} = event.target;\n        // console.log({value});\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input type=\"email\" placeholder=\"Email\" required value={email} name=\"email\" onChange={onChange} className=\"authInput\"/>\n                <input type=\"password\" placeholder=\"Password\" required value={password} name=\"password\" onChange={onChange} className=\"authInput\"/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} className=\"authInput authSubmit\"/>\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n        </>\n    );\n}\n\nexport default AuthForm;","import React from \"react\";\nimport {authService, firebaseInstance} from \"../fbase\";\nimport AuthForm from \"../components/AuthForm\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTwitter, faGoogle, faGithub} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {name} = event.target;\n        let provider;\n        switch (name) {\n            case \"google\":\n                provider = new firebaseInstance.auth.GoogleAuthProvider();\n                break;\n\n            case \"github\":\n                provider = new firebaseInstance.auth.GithubAuthProvider();\n                break;\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{marginBottom: 30}}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with GitHub <FontAwesomeIcon icon={faGithub}/>\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default Auth;","import React, {useState} from \"react\";\nimport {dbService, storageService} from \"../fbase\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTrash, faPencilAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if(ok) {\n            // delete nweet\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n            // const attachmentRef = storageService.ref().child(`${nweetObj.creatorId}/${nweetObj.id}`);\n            // const response = await attachmentRef.delete()\n            window.alert(\"Delete successful!\");\n        }\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        const ok = window.confirm(\"Are you sure you want to edit this nweet?\");\n        if(ok) {\n            // edit nweet\n            await dbService.doc(`nweets/${nweetObj.id}`).update({\n                text: newNweet,\n                updatedAt: Date.now(),\n            })\n            toggleEditing();\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {value} = event.target;\n        setNewNweet(value);\n    }\n\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    {isOwner && <>\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                            <input value={newNweet} onChange={onChange} required type=\"text\" maxLength={120}\n                                   placeholder=\"Edit your nweet\" autoFocus className=\"formInput\"/>\n                            <input type=\"submit\" value=\"Edit Nweet\" className=\"formBtn\"/>\n                        </form>\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\n                    </>}\n                </>\n                ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","import React, {useState} from \"react\";\nimport {dbService, storageService} from \"../fbase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlus, faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState();\n\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment) {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        }\n\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment();\n    }\n\n    const onChange = (event) => {\n        const {value} = event.target;\n        setNweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const {files} = event.target;\n        if (files.length > 0) {\n            const theFile = files[0];\n            const reader = new FileReader();\n            reader.onloadend = (finishedEvent) => {\n                console.log(finishedEvent);\n                const {result} = finishedEvent.target;\n                setAttachment(result);\n            }\n            reader.readAsDataURL(theFile);\n        } else {\n            setAttachment();\n        }\n    }\n\n    const onClearAttachment = () => {\n        setAttachment(null);\n        document.querySelector('#fileSelector').value = null;\n    }\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input className=\"factoryInput__input\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\n            </div>\n\n            <label for=\"fileSelector\" className=\"factoryInput__label\">\n                <span>\n                    Add Photo\n                </span>\n                <FontAwesomeIcon icon={faPlus}/>\n            </label>\n            <input id=\"fileSelector\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{\n                opacity: 0,\n            }}/>\n\n            {attachment &&\n            <div className=\"factoryForm__attachment\">\n                <img src={attachment} style={{\n                    backgroundImage: attachment,\n                }}/>\n                <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                    <span>Remove</span>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </div>\n            </div>\n            }\n        </form>\n    );\n};\n\nexport default NweetFactory;","import React, {useEffect, useState} from \"react\";\nimport {dbService} from \"../fbase\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() =>{\n        dbService.collection(\"nweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        })\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div style={{marginTop: 30}}>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id}\n                           nweetObj={nweet}\n                           isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nagivation = ({userObj}) =>\n    <nav>\n        <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50, marginBottom: 50}}>\n            <li>\n                <Link to=\"/\" style={{marginRight: 10}}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/profile\"\n                      style={{\n                          marginLeft: 10,\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          alignItems: \"center\",\n                          fontSize: 12,\n                      }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{marginTop: 10}}>\n                        {userObj ? `${userObj.displayName}'s Profile` : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>;\n\nexport default Nagivation;","import React, {useEffect, useState} from \"react\";\nimport {authService, dbService} from \"../fbase\";\nimport {useHistory} from \"react-router\";\n\nexport default ({userObj, refreshUser}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    }\n\n    const getMyNweets = async () => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\", \"desc\")\n            .get();\n        console.log(nweets);\n        console.log(nweets.docs.map(doc => doc.data()));\n    }\n\n    const onChange = (event) => {\n        const {value} = event.target;\n        setNewDisplayName(value);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            const response = await userObj.updateProfile({\n                displayName: newDisplayName\n            });\n            refreshUser && refreshUser();\n        }\n    }\n\n    useEffect(() => {\n        getMyNweets();\n    }, [])\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{marginTop: 10}}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</span>\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n    console.log(userObj);\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <div style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                    </div>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth/>\n                        </Route>\n                    </>\n                )};\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, {useState, useEffect, Fragment} from \"react\";\nimport AppRouter from \"components/AppRouter\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if(user) {\n                setIsLoggedIn(true);\n                setUserObj({\n                    uid: user.uid,\n                    displayName: user.displayName,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            }\n            else {\n                setIsLoggedIn(false);\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, [])\n\n    const refreshUser = () => {\n        console.log(authService.currentUser);\n        const user = authService.currentUser;\n        const userObj = {\n            uid: user.uid,\n            displayName: user.displayName,\n            updateProfile: (arge) => user.updateProfile(arge),\n        };\n        setUserObj(userObj);\n    }\n\n    return (\n        <Fragment>\n            {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj = {userObj}/> : \"Initializing...\"}\n            {/*<footer>&copy; {new Date().getFullYear()} Twitter</footer>*/}\n        </Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n// import firebase from \"./fbase\";\n// console.log(firebase);\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}